{"version":3,"sources":["webpack:///./models/index.ts","webpack:///./index.tsx","webpack:///./redux/store/index.ts","webpack:///./redux/reducers/index.ts","webpack:///./redux/reducers/userReducer.ts","webpack:///./redux/reducers/layoutReducer.ts","webpack:///./redux/middleware/index.ts","webpack:///./redux/middleware/logger.ts","webpack:///./containers/App/App.tsx","webpack:///./containers/Login/Login.tsx","webpack:///./components/Auth/index.tsx","webpack:///./components/ActionButton/index.tsx","webpack:///./components/ActionButton/action-button.css?97eb","webpack:///./components/Button/index.tsx","webpack:///./components/Button/button.css?d6d9","webpack:///./components/Form/index.tsx","webpack:///./components/Form/form.css?a586","webpack:///./components/FormErrors/index.tsx","webpack:///./components/FormErrors/form-errors.css?8b12","webpack:///./components/FormInput/index.tsx","webpack:///./components/FormInput/form-input.css?a306","webpack:///./components/FormLabel/index.tsx","webpack:///./components/FormLabel/form-label.css?5cbe","webpack:///./components/Header/index.tsx","webpack:///./components/Header/style.css?af58","webpack:///./components/Textbox/index.tsx","webpack:///./components/Textbox/textbox.css?f3e4","webpack:///./components/Title/index.tsx","webpack:///./components/Title/title.css?7208","webpack:///./config/firebase.ts","webpack:///./config/firebase-config.ts","webpack:///./containers/SignUp/SignUp.tsx","webpack:///./containers/Account/Account.tsx","webpack:///./containers/ChangeEmail/ChangeEmail.tsx","webpack:///./containers/ChangePassword/ChangePassword.tsx","webpack:///./containers/ForgotPassword/ForgotPassword.tsx","webpack:///./containers/TermsOfService/TermsOfService.tsx","webpack:///./redux/initial-state.ts","webpack:///./themes/style.css","webpack:///./redux/actions/navActions.ts","webpack:///./components/index.ts","webpack:///./models/routes.ts","webpack:///./redux/actions/authActions.ts","webpack:///./redux/actions/action-types.ts"],"names":["routes_1","__webpack_require__","exports","ROUTES","React","ReactDOM","react_redux_1","store_1","connected_react_router_1","App_1","initial_state_1","store","configureStore","initialState","render","createElement","Provider","ConnectedRouter","history","App","document","getElementById","redux_1","history_1","reducers_1","middleware_1","redux_thunk_1","createBrowserHistory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","logger","default","routerMiddleware","userReducer_1","layoutReducer_1","combineReducers","router","connectRouter","firebaseUser","userReducer","layout","layoutReducer","action_types_1","state","action","type","AuthActionTypes","CREATE_ACCOUNT","DEACTIVATE_ACCOUNT","DELETE_ACCOUNT","FETCH_USER","RESET_PASSWORD","REQUEST_PASSWORD_RESET","SIGN_IN","__assign","payload","SIGN_OUT","UPDATE_EMAIL","UPDATE_PASSWORD","bannerText","NavActionTypes","CLEAR_BANNER_TEXT","SET_BANNER_TEXT","__export","next","react_router_1","Login_1","SignUp_1","Account_1","ChangeEmail_1","ChangePassword_1","ForgotPassword_1","TermsOfService_1","components_1","components_2","react_hot_loader_1","hot","module","Switch","Fragment","Header","user","navigateTo","Route","exact","path","BASE","component","requireAuth","AccountContainer","LOGIN","LoginContainer","SIGNUP","SignUpContainer","ACCOUNT","CHANGE_EMAIL","ChangeEmailContainer","CHANGE_PASSWORD","ChangePasswordContainer","FORGOT_PASSWORD","ForgotPasswordContainer","TERMS","TermsOfServiceContainer","authActions_1","navActions_1","navActions_2","qs","Login","_super","props","_this","call","this","email","password","isLoading","formErrors","emailValid","passwordValid","formValid","updateState","bind","handleLogin","validateField","validateForm","__extends","prototype","componentDidMount","queryValues","parse","location","search","verifiedEmail","resetPassword","setBannerText","e","name","currentTarget","value","setState","_a","signIn","fieldName","fieldValidationErrors","match","length","Form","onSubmit","Title","FormInput","FormLabel","Textbox","onChange","showError","FormErrors","Button","disabled","onClick","ActionButton","to","Component","connect","dispatch","bindActionCreators","signOut","route","PropTypes","ComposedComponent","Authentication","componentWillMount","componentWillUpdate","nextProps","contextTypes","object","style","classNames","KeyboardBackspace_1","ActionButtonView","handleClick","preventDefault","className","button","showBackIcon","children","react_spinners_1","ClipLoader","sizeUnit","size","color","loading","form","Error_1","Object","keys","map","i","key","row","marginRight","charAt","toUpperCase","slice","formInput","formLabelContainer","formLabel","models_1","Close_1","HeaderView","headerParent","banner","onDismiss","icon","header","clearBannerText","context","text","handleSubmit","handleChange","event","trim","which","onSave","target","autoFocus","onKeyPress","onKeyDown","textbox","error","errorMsg","validation","title","firebase","firebase_config_1","initializeApp","FirebaseConfig","authRef","auth","provider","EmailAuthProvider","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","SignUp","firstName","lastName","firstNameValid","lastNameValid","handleCreateAccount","createAccount","AccountView","fontSize","marginTop","ChangeEmail","handleUpdateEmail","updateEmail","ChangePassword","currentPassword","newPassword","confirmPassword","currentPasswordValid","newPasswordValid","confirmPasswordValid","handleUpdatePassword","updatePassword","ForgotPassword","handleResetPassword","sendPasswordResetEmail","undefined","material-icons","normal","push","err","console","log","Auth_1","ActionButton_1","Button_1","Form_1","FormErrors_1","FormInput_1","FormLabel_1","Header_1","Textbox_1","Title_1","firebase_1","aFirebaseConfig","prod","verifiedEmailUrl","host","port","resetPasswordUrl","__awaiter","successMessage","createUserWithEmailAndPassword","aFirebaseUser","sent","sendEmailVerification","url","updateProfile","displayName","photoURL","error_1","message","signInWithEmailAndPassword","then","userCredential","catch","currentUser","error_2","actionCodeSettings","result","error_3","confirmPasswordReset","code","error_4","deleteUser","delete"],"mappings":"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","file":"app.36dcd45012f18df78319.js","sourcesContent":["export { ROUTES } from './routes';\nexport { AppState } from './app-state';\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { configureStore } from './redux/store';\nimport { configureStore, history } from './redux/store';\n// import { Router, Switch } from 'react-router';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { App } from './containers/App/App';\nimport { initialState } from './redux/initial-state';\nimport './themes/style.css';\n\n\nconst store = configureStore(initialState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport { reducers, AppState } from '../reducers';\nimport { logger } from '../middleware';\nimport thunk from 'redux-thunk';\n\nexport const history = createBrowserHistory();\n\nexport function configureStore(initialState: AppState): Store<AppState> {\n  const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    reducers(history as any) as any,\n    initialState,\n    composeEnhancers(\n      applyMiddleware(\n        logger,\n        thunk,\n        routerMiddleware(history as any),\n      ),\n    ),\n  ) as Store<AppState>;\n\n  if (module.hot) {\n    module.hot.accept('../reducers', () => {\n      const nextReducer = require('../reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { AppState } from '../../models/app-state';\nimport { userReducer } from './userReducer';\nimport { layoutReducer } from './layoutReducer';\n\nexport { AppState };\n\n// NOTE: current type definition of Reducer in 'redux-actions' module\n// doesn't go well with redux@4\nexport const reducers = (history: any) => combineReducers<AppState>({\n  router: connectRouter(history as any),\n  firebaseUser: userReducer as any,\n  layout: layoutReducer as any\n});\n","import { AuthActionTypes } from '../actions/action-types';\n\nconst initialState: any = {\n  firebaseUser: null\n};\n\nexport const userReducer = (state = initialState, action: any) =>  {\n  switch (action.type) {\n    case AuthActionTypes.CREATE_ACCOUNT:\n      return state;\n    case AuthActionTypes.DEACTIVATE_ACCOUNT:\n      return state;\n    case AuthActionTypes.DELETE_ACCOUNT:\n      return state;\n    case AuthActionTypes.FETCH_USER:\n      return state;\n    case AuthActionTypes.RESET_PASSWORD:\n      return state;\n    case AuthActionTypes.REQUEST_PASSWORD_RESET:\n      return state;    \n    case AuthActionTypes.SIGN_IN:\n      return {...state, firebaseUser: action.payload};\n    case AuthActionTypes.SIGN_OUT:\n      return {...state, firebaseUser: null};   \n    case AuthActionTypes.UPDATE_EMAIL:\n      return state;    \n    case AuthActionTypes.UPDATE_PASSWORD:\n      return state;       \n    default:\n      return state;\n  }\n}\n","import { NavActionTypes } from '../actions/action-types'\n\nconst initialState: any = {\n  bannerText: ''\n};\n\nexport const layoutReducer = (state = initialState, action: any) =>  {\n  switch (action.type) {\n    case NavActionTypes.CLEAR_BANNER_TEXT:\n      return {...state, bannerText: ''}\n    case NavActionTypes.SET_BANNER_TEXT:\n      return {...state, bannerText: action.payload}\n    default:\n      return state;\n  }\n}","export * from './logger';\n","import { Middleware } from 'redux';\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(action);\n  }\n  return next(action);\n};\n","import * as React from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport { LoginContainer } from '../Login/Login';\nimport { SignUpContainer } from '../SignUp/SignUp';\nimport { AccountContainer } from '../Account/Account';\nimport { ChangeEmailContainer } from '../ChangeEmail/ChangeEmail';\nimport { ChangePasswordContainer } from '../ChangePassword/ChangePassword';\nimport { ForgotPasswordContainer } from '../ForgotPassword/ForgotPassword';\nimport { TermsOfServiceContainer } from '../TermsOfService/TermsOfService';\nimport { requireAuth } from '../../components';\nimport { ROUTES } from '../../models/routes';\n\nimport { Header } from '../../components';\nimport { hot } from 'react-hot-loader';\n\nexport const App = hot(module)(() => (\n  <Switch>\n    <>\n      <Header user={null} navigateTo={() => undefined} />\n      <Route exact path={ROUTES.BASE} component={requireAuth(AccountContainer)} />\n      <Route exact path={ROUTES.LOGIN} component={LoginContainer} />\n      <Route path={ROUTES.SIGNUP} component={SignUpContainer} />\n      <Route path={ROUTES.ACCOUNT} component={requireAuth(AccountContainer)} />\n      <Route path={ROUTES.CHANGE_EMAIL} component={ChangeEmailContainer} />\n      <Route path={ROUTES.CHANGE_PASSWORD} component={ChangePasswordContainer} />\n      <Route path={ROUTES.FORGOT_PASSWORD} component={ForgotPasswordContainer} />\n      <Route path={ROUTES.TERMS} component={TermsOfServiceContainer} />\n    </>\n  </Switch>\n));\n","import * as React from 'react';\nimport { ActionButton, Button, Form, FormErrors, FormInput, Textbox, FormLabel, Title } from '../../components';\nimport { connect } from 'react-redux';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { signIn, signOut } from '../../redux/actions/authActions';\nimport { setBannerText } from '../../redux/actions/navActions';\nimport { ROUTES } from '../../models/routes';\nimport { navigateTo } from '../../redux/actions/navActions';\nimport * as qs from 'query-string';\ninterface Props {\n    location: any;\n    user: any;\n    signIn: (email: string, password: string) => any;\n    signOut: () => any;\n    navigateTo: (route: ROUTES) => any;\n    setBannerText: (bannerText: string) => any;\n}\n\ninterface State {\n    email: string;\n    password: string;\n    isLoading: boolean;\n    formErrors: { email: string; password: string; };\n    emailValid: boolean;\n    passwordValid: boolean;\n    formValid: boolean;\n}\n\nexport class Login extends React.Component<Props, State> {\n    public constructor(props: Props){\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            isLoading: false,\n            formErrors: { email: '', password: '' },\n            emailValid: false,\n            passwordValid: false,\n            formValid: false,\n        }\n        this.updateState = this.updateState.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.validateField = this.validateField.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n    }\n\n    public componentDidMount(){\n        let queryValues = qs.parse(this.props.location.search);\n        let verifiedEmail: boolean = (queryValues) ? (queryValues.verifiedEmail == \"true\") : false;\n        let resetPassword: boolean = (queryValues) ? (queryValues.resetPassword == \"true\") : false;\n        if(verifiedEmail){\n            this.props.setBannerText('Email verified successfully.');\n        }\n        if(resetPassword){\n            this.props.setBannerText('Password changed successfully.')\n        }\n    }\n\n    private updateState(e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>){\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        }, () => { this.validateField(name, value) });\n\n    }\n\n    private handleLogin() {\n        this.props.signIn(this.state.email, this.state.password);\n    }\n\n    private validateField(fieldName: string, value: string) {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n        \n        switch(fieldName) {\n            case 'email':\n                if (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) { emailValid = true; } else { emailValid = false; };\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n                break;\n            case 'password':\n                passwordValid = value.length >= 6;\n                fieldValidationErrors.password = passwordValid ? '': ' is too short';\n                break;\n            default:\n                break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n            emailValid: emailValid,\n            passwordValid: passwordValid\n        }, this.validateForm);\n    }\n\n    private validateForm() {\n        this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n    }\n\n    public render() {\n        return <>\n            <Form onSubmit={this.handleLogin}>\n                <Title>Log in</Title>\n                <FormInput>\n                    <FormLabel>Email</FormLabel>\n                    <Textbox\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.updateState}\n                        showError={this.state.formErrors['email'] ? true : false}\n                    />\n                </FormInput>\n                <FormInput>\n                    <FormLabel>Password</FormLabel>\n                    <Textbox\n                        name=\"password\"\n                        value={this.state.password}\n                        type=\"password\"\n                        onChange={this.updateState}\n                        showError={this.state.formErrors['password'] ? true : false}\n                    />\n                </FormInput>\n                <FormErrors formErrors={this.state.formErrors} />\n                <FormInput>\n                    <Button\n                        disabled={!this.state.formValid || this.state.isLoading}\n                        onClick={this.handleLogin}\n                        isLoading={this.state.isLoading}\n                        type=\"submit\"\n                    >\n                        Login\n                    </Button>\n                </FormInput>\n                <FormInput>\n                    <Button onClick={() => this.props.navigateTo(ROUTES.SIGNUP)}>Create Account</Button>\n                </FormInput>\n                <FormInput>\n                    <ActionButton\n                        to={ROUTES.FORGOT_PASSWORD}\n                        navigateTo={() => undefined}>\n                        Forgot password?\n                    </ActionButton>\n                </FormInput>\n            </Form>\n        </>;\n    }\n}\n\nexport const LoginContainer = connect(null, (dispatch: Dispatch<Action>) => bindActionCreators({\n    signIn: (email: string, password: string) => signIn(email, password),\n    signOut: () => signOut(),\n    navigateTo: (route: ROUTES) => navigateTo(route),\n    setBannerText: (bannerText: string) => setBannerText(bannerText),\n}, dispatch))(Login);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { ROUTES } from '../../models/routes';\nimport { navigateTo } from '../../redux/actions/navActions';\nimport * as PropTypes from 'prop-types';\nimport { AppState } from '../../models/app-state';\n\ninterface Props {\n  user: any;\n  navigateTo: (route: ROUTES) => any;\n}\n\nexport const requireAuth = (ComposedComponent: any)  => {\n  class Authentication extends React.Component<Props> {\n    static contextTypes = {\n      router: PropTypes.object\n    };\n\n    componentWillMount() {\n      if (this.props.user.firebaseUser === null) {\n        this.props.navigateTo(ROUTES.LOGIN);\n      }\n    }\n\n    componentWillUpdate(nextProps: any) {\n      if (!nextProps.user.firebaseUser) {\n        this.props.navigateTo(ROUTES.LOGIN);\n      }\n    }\n\n    render() {\n      if (this.props.user.firebaseUser) {\n        return <ComposedComponent {...this.props} />;\n      }\n      return null;\n    }\n  }\n\n  function mapStateToProps(state: AppState) {\n    return { user: state.firebaseUser };\n  }\n\n  return connect(mapStateToProps, (dispatch: Dispatch<Action>) => bindActionCreators({\n    navigateTo: (route: ROUTES) => navigateTo(route),\n  }, dispatch))(Authentication);\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { ROUTES } from '../../models/routes';\nimport { navigateTo } from '../../redux/actions/navActions';\nimport * as style from './action-button.css';\nimport * as classNames from 'classnames';\nimport KeyboardBackspace from '@material-ui/icons/KeyboardBackspace';\n\ninterface Props {\n    to: ROUTES;\n    showBackIcon?: boolean;\n    disabled?: boolean;\n    navigateTo: (route: ROUTES) => any;\n}\n\nexport class ActionButtonView extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    public handleClick(e: React.MouseEvent) {\n        e.preventDefault();\n        if (!this.props.disabled) { this.props.navigateTo(this.props.to); }\n    }\n    public render() {\n        return (\n            <button\n                className={classNames({ [style.button]: true, [style.disabled]: this.props.disabled })}\n                disabled={this.props.disabled}\n                onClick={this.handleClick}>\n                { this.props.showBackIcon ? <KeyboardBackspace /> : null }\n                <label>{this.props.children}</label>\n            </button>\n        )\n    }\n}\n\nexport const ActionButton = connect(null, (dispatch: Dispatch<Action>) => bindActionCreators({\n    navigateTo: (route: ROUTES) => navigateTo(route),\n}, dispatch))(ActionButtonView);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"_20CtX\",\"disabled\":\"_144r7\"};","import * as React from 'react';\nimport * as style from './button.css';\nimport { ClipLoader } from 'react-spinners';\nimport * as classNames from 'classnames';\n\ninterface Props {\n    type?: 'button' | 'submit' | 'reset' | undefined;\n    disabled?: boolean;\n    isLoading?: boolean;\n    onClick: () => any;\n}\n\nexport class Button extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    public handleClick(e: React.MouseEvent) {\n        e.preventDefault();\n        if (!this.props.disabled || this.props.isLoading) { this.props.onClick(); }\n    }\n\n    public render() {\n        return <button\n            type={this.props.type}\n            onClick={this.handleClick}\n            disabled={this.props.disabled}\n            className={classNames({ [style.button]: true, [style.disabled]: this.props.disabled || this.props.isLoading })}\n        >\n            {this.props.isLoading ?\n            <ClipLoader\n                sizeUnit={\"px\"}\n                size={20}\n                color={'#000'}\n                loading={this.props.isLoading}\n            /> : this.props.children}\n        </button>;\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"_1-HdD\",\"disabled\":\"HqV-4\"};","import * as React from 'react';\nimport * as style from './form.css';\n\ninterface Props {\n    onSubmit?: () => any;\n}\n\nexport class Form extends React.Component<Props> {\n    public render() {\n        return <form className={style.form} onSubmit={this.props.onSubmit}>\n            {this.props.children}\n        </form>;\n    }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"_2tvkl\"};","import * as React from 'react';\nimport * as style from './form-errors.css';\nimport ErrorIcon from '@material-ui/icons/Error';\n\ninterface FormErrorProps {\n    formErrors: any;\n}\n\nexport class FormErrors extends React.Component<FormErrorProps> {\n    public render() {\n        return (\n            <div className={style.formErrors}>\n                {\n                    Object.keys(this.props.formErrors).map((fieldName, i) => {\n                        if (this.props.formErrors[fieldName].length > 0) {\n                            return (\n                                <p key={i} className={style.row}>\n                                    <ErrorIcon style={{ marginRight: 5 }}/>\n                                    {fieldName.charAt(0).toUpperCase() + fieldName.slice(1)} {this.props.formErrors[fieldName]}\n                                </p>)        \n                        } else {\n                            return '';\n                        }\n                    })\n                }\n            </div>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formErrors\":\"NEIDQ\",\"row\":\"_22_sL\"};","import * as React from 'react';\nimport * as style from './form-input.css';\n\nexport class FormInput extends React.Component<{}> {\n    public render() {\n        return <div className={style.formInput}>\n            {this.props.children}\n        </div>;\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"_2vnS3\"};","import * as React from 'react';\nimport * as style from './form-label.css';\n\nexport class FormLabel extends React.Component<{}> {\n    public render() {\n        return <div className={style.formLabelContainer}>\n            <label className={style.formLabel}>{this.props.children}</label>\n        </div>;\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabelContainer\":\"_1j2-x\",\"formLabel\":\"_2G_x5\"};","import * as React from 'react';\nimport * as style from './style.css';\nimport { connect } from 'react-redux';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { AppState, ROUTES } from '../../models';\nimport { navigateTo, clearBannerText } from '../../redux/actions/navActions';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface Props {\n  user: any;\n  bannerText?: string;\n  onDismiss?: () => any;\n  navigateTo: (route: ROUTES) => any;\n}\n\nexport class HeaderView extends React.Component<Props> {\n\n  render() {\n    return (\n      <div className={style.headerParent}>\n        { this.props.bannerText ?\n        <div className={style.banner}>\n          <label>{this.props.bannerText}</label>\n          { this.props.onDismiss ? <CloseIcon className={style.icon} \n          onClick={this.props.onDismiss}/> : null }\n        </div> : null\n        }\n        <header className={style.header}>\n          <h1 onClick={() => this.props.navigateTo(ROUTES.BASE)}>Site Name</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: AppState) {\n  return { bannerText: state.layout.bannerText };\n}\n\nexport const Header = connect(mapStateToProps, (dispatch: Dispatch<Action>) => bindActionCreators({\n  navigateTo: (route: ROUTES) => navigateTo(route),\n  onDismiss: () => clearBannerText(),\n}, dispatch))(HeaderView);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerParent\":\"rPvhv\",\"header\":\"_2uitE\",\"banner\":\"_1DgEn\",\"icon\":\"DqvK6\"};","import * as React from 'react';\nimport * as style from './textbox.css';\nimport * as classNames from 'classnames';\n\nexport namespace Textbox {\n    export interface Props {\n        autoFocus?: boolean;\n        type?: string;\n        value: string;\n        name: string;\n        errorMsg?: string;\n        showError?: boolean;\n        onSave?: (text: string) => void;\n        onChange: (e: React.FormEvent<HTMLInputElement>) => any;\n        onKeyPress?: (e: React.FormEvent<HTMLInputElement>) => any;\n    }\n\n    export interface State {\n        text: string;\n    }\n}\n\nexport class Textbox extends React.Component<Textbox.Props, Textbox.State> {\n    constructor(props: Textbox.Props, context?: any) {\n        super(props, context);\n        this.state = { text: this.props.value || '' };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleSubmit(event: React.KeyboardEvent<HTMLInputElement>) {\n        const text = event.currentTarget.value.trim();\n        if (event.which === 13) {\n          if (this.props.onSave) { this.props.onSave(text); }\n        }\n      }\n    \n      handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({ text: event.target.value });\n        this.props.onChange(event);\n      }\n\n    public render() {\n        return <>\n          <input\n            autoFocus={this.props.autoFocus}\n            type={this.props.type}\n            name={this.props.name}\n            value={this.state.text}\n            onChange={this.handleChange}\n            onKeyPress={this.props.onKeyPress}\n            onKeyDown={this.handleSubmit}\n            className={classNames({ [style.textbox]: true, [style.error]: this.props.errorMsg || this.props.showError })}\n        />\n        { this.props.errorMsg ?\n        <div className={style.validation}>\n          {this.props.errorMsg}\n        </div> : null }\n      </>\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textbox\":\"_3liu5\",\"error\":\"_1Jv__\",\"validation\":\"_k9Fm\"};","import * as React from 'react';\nimport * as style from './title.css';\n\nexport class Title extends React.Component<{}> {\n    public render() {\n        return <>\n            <h1 className={style.title}>{this.props.children}</h1>\n        </>;\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"_3oXgr\"};","// import * as firebase from 'firebase/app';\n// import { FirebaseConfig } from './firebase-config';\n\n// export const firebaseApp = () => aFirebaseApp\n// let aFirebaseApp: any = null\n\n// export const initializeFirebase = () => {\n//     aFirebaseApp = firebase.initializeApp(FirebaseConfig);\n// }\n// export const authRef = () => firebaseApp().auth();\n\n\nimport * as firebase from \"firebase\";\n\n// import { FirebaseConfig } from \"../config/keys\";\nimport { FirebaseConfig } from '../config/firebase-config';\nfirebase.initializeApp(FirebaseConfig);\n\nexport const authRef = firebase.auth();\nexport const provider = new firebase.auth.EmailAuthProvider();\n","export const FirebaseConfig = {\n    apiKey: \"AIzaSyDirqA_HGk_eLCUjHV3hKq0RmuPZEFA7lk\",\n    authDomain: \"user-account-system-30471.firebaseapp.com\",\n    databaseURL: \"https://user-account-system-30471.firebaseio.com\",\n    projectId: \"user-account-system-30471\",\n    storageBucket: \"user-account-system-30471.appspot.com\",\n    messagingSenderId: \"80951927298\",\n    appId: \"1:80951927298:web:078a931a1135a503\"\n};\n","import * as React from 'react';\nimport { Button, Form, FormErrors, FormInput, Textbox, FormLabel, Title } from '../../components';\nimport { createAccount } from '../../redux/actions/authActions';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { ROUTES } from '../../models/routes';\nimport { navigateTo } from '../../redux/actions/navActions';\n\ninterface Props {\n    user: any;\n    createAccount: (firstName: string, lastName: string, email: string, password: string) => any;\n    navigateTo: (route: ROUTES) => any;\n}\n\ninterface State {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    formErrors: { email: string; password: string; };\n    firstNameValid: boolean;\n    lastNameValid: boolean;\n    emailValid: boolean;\n    passwordValid: boolean;\n    formValid: boolean;\n    isLoading: boolean;\n}\n\nexport class SignUp extends React.Component<Props, State> {\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            formErrors: { email: '', password: '' },\n            firstNameValid: false,\n            lastNameValid: false,\n            emailValid: false,\n            passwordValid: false,\n            formValid: false,\n            isLoading: false,\n        }\n        this.updateState = this.updateState.bind(this);\n        this.validateField = this.validateField.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.handleCreateAccount = this.handleCreateAccount.bind(this);\n    }\n\n    private updateState(e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>){\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        }, () => { this.validateField(name, value) });\n    }\n\n    private validateField(fieldName: string, value: string) {\n        let fieldValidationErrors = this.state.formErrors;\n        let firstNameValid = this.state.firstNameValid;\n        let lastNameValid = this.state.lastNameValid;\n        let emailValid = this.state.emailValid;\n        let passwordValid = this.state.passwordValid;\n        \n        switch(fieldName) {\n            case 'firstName':\n                if (value.length > 0) { firstNameValid = true; } else { firstNameValid = false; };\n                break;\n            case 'lastName':\n                if (value.length > 0) { lastNameValid = true; } else { lastNameValid = false; };\n                break;\n            case 'email':\n                if (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) { emailValid = true; } else { emailValid = false; };\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n                break;\n            case 'password':\n                passwordValid = value.length >= 8;\n                fieldValidationErrors.password = passwordValid ? '': ' is too short';\n                break;\n            default:\n                break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n            firstNameValid: firstNameValid,\n            lastNameValid: lastNameValid,\n            emailValid: emailValid,\n            passwordValid: passwordValid\n        }, this.validateForm);\n    }\n\n    private validateForm() {\n        this.setState({formValid: this.state.firstNameValid &&\n            this.state.lastNameValid && this.state.emailValid && this.state.passwordValid});\n    }\n\n    private handleCreateAccount() {\n        this.setState({ isLoading: true });\n        let { firstName, lastName, email, password } = this.state;\n        this.props.createAccount(firstName, lastName, email, password);\n    } \n\n    public render() {\n        return <>\n            <Form>\n                <Title>Create Account</Title>\n                <FormInput>\n                    <FormLabel>First Name</FormLabel>\n                    <Textbox name=\"firstName\" value={this.state.firstName} onChange={this.updateState} />\n                </FormInput>\n                <FormInput>\n                    <FormLabel>Last Name</FormLabel>\n                    <Textbox name=\"lastName\" value={this.state.lastName} onChange={this.updateState} />\n                </FormInput>\n                <FormInput>\n                    <FormLabel>Email Address</FormLabel>\n                    <Textbox\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.updateState}\n                        showError={this.state.formErrors['email'] ? true : false}\n                    />\n                </FormInput>\n                <FormInput>\n                    <FormLabel>Password (at least 8 characters)</FormLabel>\n                    <Textbox\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={this.updateState}\n                        showError={this.state.formErrors['password'] ? true : false}\n                    />\n                </FormInput>\n                <FormErrors formErrors={this.state.formErrors} />\n                <FormInput>\n                    <p>By continuing you agree to our terms of service.</p>\n                </FormInput>\n                <FormInput>\n                    <Button\n                        onClick={() => this.handleCreateAccount()}\n                        disabled={!this.state.formValid}\n                        isLoading={this.state.isLoading}>\n                        Continue\n                    </Button>\n                </FormInput>\n            </Form>\n        </>;\n    }\n}\n\nexport const SignUpContainer = connect(null, (dispatch: Dispatch<Action>) => bindActionCreators({\n    createAccount: (firstName: string, lastName: string, email: string, password: string) => createAccount(firstName, lastName, email, password),\n    navigateTo: (route: ROUTES) => navigateTo(route),\n}, dispatch))(SignUp);","import * as React from 'react';\nimport { Button, Form, FormInput, Title } from '../../components';\nimport { connect } from 'react-redux';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { signOut } from '../../redux/actions/authActions';\nimport { ROUTES } from '../../models/routes';\nimport { navigateTo } from '../../redux/actions/navActions';\n\ninterface Props {\n    signOut: () => any;\n    navigateTo: (route: ROUTES) => any;\n    user: any;\n}\n\nexport class AccountView extends React.Component<Props> {\n    public render() {\n        let { firebaseUser: user } = this.props.user;\n        return <>\n            <Form>\n                <Title>Account</Title>\n                <div style={{fontSize: '1em', marginTop: '-25px'}}>{user.email}</div>\n                <hr/>\n                <FormInput>\n                    <Button onClick={() => this.props.navigateTo(ROUTES.CHANGE_EMAIL)}>Change Email</Button>\n                </FormInput>\n                <FormInput>\n                    <Button onClick={() => this.props.navigateTo(ROUTES.CHANGE_PASSWORD)}>Change Password</Button>\n                </FormInput>\n                <FormInput>\n                    <Button onClick={() => this.props.signOut()}>Log Out</Button>\n                </FormInput>\n            </Form>\n        </>;\n    }\n}\n\nexport const AccountContainer = connect(null, (dispatch: Dispatch<Action>) => bindActionCreators({\n    signOut: () => signOut(),\n    navigateTo: (route: ROUTES) => navigateTo(route),\n}, dispatch))(AccountView);\n","import * as React from 'react';\nimport { ActionButton, Button, Form, FormInput, Textbox, FormLabel, FormErrors, Title } from '../../components';\nimport { updateEmail } from '../../redux/actions/authActions';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { ROUTES } from '../../models/routes';\nimport { navigateTo } from '../../redux/actions/navActions';\n\ninterface Props {\n    user: any;\n    updateEmail: (email: string) => any;\n    navigateTo: (route: ROUTES) => any;\n}\ninterface State {\n    email: string;\n    formErrors: { email: string; };\n    emailValid: boolean;\n    formValid: boolean;\n    isLoading: boolean;\n}\n\nexport class ChangeEmail extends React.Component<Props,State> {\n    public constructor(props: Props){\n        super(props);\n        this.state = {\n            email: '',\n            formErrors: { email: '' },\n            emailValid: false,\n            formValid: false,\n            isLoading: false,\n        }\n        this.updateState = this.updateState.bind(this);\n        this.validateField = this.validateField.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.handleUpdateEmail = this.handleUpdateEmail.bind(this);\n    }\n\n    private updateState(e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>){\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        }, () => { this.validateField(name, value) });\n    }\n\n    private validateField(fieldName: string, value: string) {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        \n        switch(fieldName) {\n            case 'email':\n                if (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) { emailValid = true; } else { emailValid = false; };\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n                break;\n            default:\n                break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n            emailValid: emailValid,\n        }, this.validateForm);\n    }\n\n    private validateForm() {\n        this.setState({ formValid: this.state.emailValid });\n    }\n\n    private handleUpdateEmail() {\n        this.props.updateEmail(this.state.email);\n    }\n\n    public render() {\n        return <>\n            <Form onSubmit={this.handleUpdateEmail}>\n                <ActionButton\n                    disabled={false}\n                    to={ROUTES.ACCOUNT}\n                    navigateTo={() => undefined}\n                    showBackIcon={true}>\n                    Back\n                </ActionButton>\n                <Title>Change Email</Title>\n                <FormInput>\n                    <FormLabel>Email</FormLabel>\n                    <Textbox name=\"email\" value={this.state.email} onChange={this.updateState} />\n                </FormInput>\n                <FormErrors formErrors={this.state.formErrors} />\n                <FormInput>\n                    <Button onClick={this.handleUpdateEmail}\n                        isLoading={this.state.isLoading}\n                        disabled={!this.state.formValid || this.state.isLoading}>Change Email</Button>\n                </FormInput>\n            </Form>\n        </>;\n    }\n}\n\nexport const ChangeEmailContainer = connect(null, (dispatch: Dispatch<Action>) => bindActionCreators({\n    updateEmail: (email: string) => updateEmail(email),\n    navigateTo: (route: ROUTES) => navigateTo(route),\n}, dispatch))(ChangeEmail);\n","import * as React from 'react';\nimport { Button, Form, FormInput, FormErrors, Textbox, FormLabel, Title, ActionButton } from '../../components';\nimport { updatePassword } from '../../redux/actions/authActions';\nimport { Action, bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { ROUTES } from '../../models/routes';\nimport { navigateTo } from '../../redux/actions/navActions';\n\ninterface Props {\n    user: any;\n    updatePassword: (Password: string) => any;\n    navigateTo: (route: ROUTES) => any;\n}\ninterface State {\n    currentPassword: string;\n    newPassword: string;\n    confirmPassword: string;\n    formErrors: { currentPassword: string; newPassword: string; confirmPassword: string; };\n    currentPasswordValid: boolean;\n    newPasswordValid: boolean;\n    confirmPasswordValid: boolean;\n    formValid: boolean;\n    isLoading: boolean;\n}\n\nexport class ChangePassword extends React.Component<Props, State> {\n    public constructor(props: Props){\n        super(props);\n        this.state = {\n            currentPassword: '',\n            newPassword: '',\n            confirmPassword: '',\n            formErrors: { currentPassword: '', newPassword: '', confirmPassword: '' },\n            currentPasswordValid: false,\n            newPasswordValid: false,\n            confirmPasswordValid: false,\n            formValid: false,\n            isLoading: false,\n        }\n        this.updateState = this.updateState.bind(this);\n        this.validateField = this.validateField.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.handleUpdatePassword = this.handleUpdatePassword.bind(this);\n    }\n\n    private updateState(e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>){\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        }, () => { this.validateField(name, value) });\n    }\n\n    private validateField(fieldName: string, value: string) {\n        let fieldValidationErrors = this.state.formErrors;\n        let currentPasswordValid = this.state.currentPasswordValid;\n        let newPasswordValid = this.state.newPasswordValid;\n        let confirmPasswordValid = this.state.confirmPasswordValid;\n        \n        switch(fieldName) {\n            case 'currentPassword':\n                currentPasswordValid = value.length >= 8;\n                fieldValidationErrors.currentPassword = currentPasswordValid ? '': ' is too short';\n                break;\n            case 'newPassword':\n                newPasswordValid = value.length >= 8;\n                fieldValidationErrors.newPassword = newPasswordValid ? '': ' is too short';\n                break;\n            case 'confirmPassword':\n                confirmPasswordValid = this.state.confirmPassword === this.state.newPassword;\n                fieldValidationErrors.confirmPassword = confirmPasswordValid ? '': ' must be the same as the new password';\n                break;\n            default:\n                break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n            currentPasswordValid: currentPasswordValid,\n            newPasswordValid: newPasswordValid,\n            confirmPasswordValid: confirmPasswordValid,\n        }, this.validateForm);\n    }\n\n    private validateForm() {\n        this.setState({ formValid: this.state.currentPasswordValid &&\n            this.state.newPasswordValid && this.state.confirmPasswordValid });\n    }\n\n    private handleUpdatePassword() {\n        this.props.updatePassword(this.state.confirmPassword);\n    }\n\n    public render() {\n        return <>\n            <Form onSubmit={this.handleUpdatePassword}>\n                <ActionButton\n                    disabled={false}\n                    to={ROUTES.ACCOUNT}\n                    navigateTo={() => undefined}\n                    showBackIcon={true}>\n                    Back\n                </ActionButton>\n                <Title>Change Password</Title>\n                <FormInput>\n                    <FormLabel>Current Password</FormLabel>\n                    <Textbox name=\"currentPassword\" value={this.state.currentPassword} \n                    onChange={this.updateState} type=\"password\" />\n                </FormInput>\n                <FormInput>\n                    <FormLabel>New Password</FormLabel>\n                    <Textbox name=\"newPassword\" value={this.state.newPassword} \n                    onChange={this.updateState} type=\"password\" />\n                </FormInput>\n                <FormInput>\n                    <FormLabel>Confirm Password</FormLabel>\n                    <Textbox name=\"confirmPassword\" value={this.state.confirmPassword} \n                    onChange={this.updateState} type=\"password\" />\n                </FormInput>\n                <FormErrors formErrors={this.state.formErrors} />\n                <FormInput>\n                    <Button onClick={this.handleUpdatePassword}\n                        isLoading={this.state.isLoading}\n                        disabled={!this.state.formValid || this.state.isLoading}>Change Password</Button>\n                </FormInput>\n            </Form>\n        </>;\n    }\n}\n\nexport const ChangePasswordContainer = connect(null, (dispatch: Dispatch<Action>) => bindActionCreators({\n    updatePassword: (password: string) => updatePassword(password),\n    navigateTo: (route: ROUTES) => navigateTo(route),\n}, dispatch))(ChangePassword);\n","import * as React from 'react';\nimport { ActionButton, Button, Form, FormErrors, FormInput, Textbox, FormLabel, Title } from '../../components';\nimport { ROUTES } from '../../models';\nimport { sendPasswordResetEmail } from '../../redux/actions/authActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch, Action} from 'redux';\n\ninterface Props{\n    sendPasswordResetEmail: (email: string) => any; \n}\ninterface State {\n    email: string;\n    formErrors: { email: string; };\n    emailValid: boolean;\n    formValid: boolean;\n    isLoading: boolean;\n}\n\nexport class ForgotPassword extends React.Component<Props, State> {\n\n    public constructor(props: any){\n        super(props);\n        this.state = {\n            email: '',\n            formErrors: { email: '' },\n            emailValid: false,\n            formValid: false,\n            isLoading: false,\n        }\n        this.updateState = this.updateState.bind(this);\n        this.validateField = this.validateField.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.handleResetPassword = this.handleResetPassword.bind(this);\n    }\n\n    private updateState(e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>){\n        const name = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        this.setState({\n            ...this.state,\n            [e.currentTarget.name]: e.currentTarget.value\n        }, () => { this.validateField(name, value) });\n    }\n\n    private validateField(fieldName: string, value: string) {\n        let fieldValidationErrors = this.state.formErrors;\n        let emailValid = this.state.emailValid;\n        \n        switch(fieldName) {\n            case 'email':\n                if (value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) { emailValid = true; } else { emailValid = false; };\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n                break;\n            default:\n                break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n            emailValid: emailValid,\n        }, this.validateForm);\n    }\n\n    private validateForm() {\n        this.setState({ formValid: this.state.emailValid });\n    }\n\n    private handleResetPassword() {\n        this.props.sendPasswordResetEmail(this.state.email);\n    }\n\n    public render() {\n        return <>\n            <Form>\n                <ActionButton\n                    disabled={false}\n                    to={ROUTES.LOGIN}\n                    navigateTo={() => undefined}\n                    showBackIcon={true}>\n                    Back\n                </ActionButton>\n                <Title>Forgot Password</Title>\n                <FormInput>\n                    <FormLabel>Email</FormLabel>\n                    <Textbox name=\"email\" value=\"\" onChange={this.updateState} />\n                </FormInput>\n                <FormErrors formErrors={this.state.formErrors} />\n                <FormInput>\n                    <Button onClick={this.handleResetPassword}\n                        disabled={!this.state.formValid || this.state.isLoading}>Reset Password</Button>\n                </FormInput>\n            </Form>\n        </>;\n    }\n}\n\nexport const ForgotPasswordContainer = connect(null, (dispatch: Dispatch<Action>) => bindActionCreators({\n    sendPasswordResetEmail: (email: string) => sendPasswordResetEmail(email),\n}, dispatch))(ForgotPassword);\n","import * as React from 'react';\nimport { Form, FormInput, Title } from '../../components';\n\nexport class TermsOfServiceContainer extends React.Component<{}> {\n    public render() {\n        return <>\n            <Form>\n                <Title>Terms of Service</Title>\n                <FormInput>\n                    <p>This is the terms of service.</p>\n                </FormInput>\n            </Form>\n        </>;\n    }\n}\n","export const initialState = {\n    firebaseUser: undefined,\n    router: undefined,\n    layout: undefined\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"material-icons\":\"_2d_W2\",\"normal\":\"KTVh6\"};","import { ROUTES } from '../../models/routes';\nimport { push } from 'connected-react-router';\nimport { NavActionTypes } from '../actions/action-types'\n\nexport const navigateTo = (route: ROUTES) => (dispatch: any) => {\n  try {\n    dispatch({type: NavActionTypes.CLEAR_BANNER_TEXT, payload: null});\n    dispatch(push(route));\n  } catch(err) {\n    console.log(\"Cannot navigate:\", err);\n  }\n}\n\nexport const clearBannerText = () => (dispatch: any) => {\n  try {\n    console.log('clearing banner text')\n    dispatch({type: NavActionTypes.CLEAR_BANNER_TEXT, payload: null});\n  } catch(err) {\n    console.log(\"Cannot clear alert:\", err);\n  }\n}\n\nexport const setBannerText = (bannerText: string) => (dispatch: any) => {\n  try {\n    console.log('setting banner text')\n    dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: bannerText});\n  } catch(err) {\n    console.log(\"Cannot set banner text:\", err);\n  }\n}","export { requireAuth } from './Auth';\nexport { ActionButton } from './ActionButton';\nexport { Button } from './Button';\nexport { Form } from './Form';\nexport { FormErrors } from './FormErrors';\nexport { FormInput } from './FormInput';\nexport { FormLabel } from './FormLabel';\nexport { Header } from './Header';\nexport { Textbox } from './Textbox';\nexport { Title } from './Title';\n","export enum ROUTES {\n    BASE = '/',\n    LOGIN = '/login',\n    ACCOUNT = '/account',\n    SIGNUP = '/signup',\n    CHANGE_EMAIL = '/email',\n    CHANGE_PASSWORD = '/password',\n    FORGOT_PASSWORD = '/forgot',\n    TERMS = '/terms',\n}\n","import { AuthActionTypes, NavActionTypes } from './action-types';\nimport { authRef } from '../../config/firebase';\nimport { navigateTo, setBannerText } from '../actions/navActions';\nimport { ROUTES } from '../../models/routes';\nimport { User as firebaseUser } from 'firebase';\nvar config = require('../../config/example-config.json');\n\nlet aFirebaseConfig: any = (process.env.NODE_ENV === \"development\") ? \nconfig.dev:\nconfig.prod;\n//firebaseFunctions.config().dev :\n//firebaseFunctions.config().prod;\n\nlet verifiedEmailUrl:string = `${aFirebaseConfig.host}:${aFirebaseConfig.port || ''}/login?verifiedEmail=true`;\nlet resetPasswordUrl:string = `${aFirebaseConfig.host}:${aFirebaseConfig.port || ''}/login?resetPassword=true`;\n\nexport const createAccount = (firstName: string, lastName: string, \n  email: string, password: string) => async (dispatch: any) => {\n   let successMessage: string = 'Please check your inbox to verify your email.';\n    try {\n    let aFirebaseUser:firebaseUser = await authRef.createUserWithEmailAndPassword(email, password);\n    if(aFirebaseUser){\n      await aFirebaseUser.sendEmailVerification({ url: `${verifiedEmailUrl}` })\n      await aFirebaseUser.updateProfile({\n        displayName: `${firstName} ${lastName}`,\n        photoURL: null\n      });\n      console.log(aFirebaseUser);\n      dispatch({type: AuthActionTypes.SIGN_IN, payload: aFirebaseUser});\n      dispatch(navigateTo(ROUTES.ACCOUNT));\n      dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: successMessage});\n    }\n  } catch(error) {\n    console.log(\"Cannot create account: \" + error);\n    dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: error.message});\n    return error;\n  }\n}\n\nexport const signIn = (email: string, password: string) => (dispatch: any) => {\n  try {\n    authRef\n        .signInWithEmailAndPassword(email, password)\n        .then((userCredential: any) => {\n          console.log(userCredential);\n          dispatch({type: AuthActionTypes.SIGN_IN, payload: userCredential});\n          dispatch(navigateTo(ROUTES.ACCOUNT));\n        })\n        .catch((error: any) => {\n          console.log(error);\n          dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: error.message});\n        });\n  } catch(error) {\n    console.log(\"Cannot sign in\");\n    dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: error})\n  }\n}\n\nexport const signOut = () => (dispatch: any) => {\n    authRef\n        .signOut()\n        .then(() => {\n          dispatch({type: AuthActionTypes.SIGN_OUT, payload: null});\n          dispatch(navigateTo(ROUTES.LOGIN));\n          // Sign-out successful.\n          console.log('signed out!');\n        })\n        .catch((error: any) => {\n          console.log('sign out failure: ', error);\n        });\n};\n\nexport const updateEmail = (email: string) => async (dispatch: any) => {\n   let successMessage: string = 'Please check your inbox to verify your email.';\n    let aFirebaseUser:firebaseUser | null = authRef.currentUser;\n    try {\n      if(aFirebaseUser){\n        await aFirebaseUser.updateEmail(email);\n        await aFirebaseUser.sendEmailVerification({ url: `${verifiedEmailUrl}` })\n        dispatch(navigateTo(ROUTES.ACCOUNT));\n        dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: successMessage})\n    }\n    } catch (error) {\n      console.log(error);\n      dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: error.message});\n    }\n\n}\n\nexport const updatePassword = (password: string) => (dispatch: any) => {\n  let successMessage: string = 'Your password has been changed!';\n    let aFirebaseUser = authRef.currentUser || null\n    if(aFirebaseUser){\n        aFirebaseUser\n            .updatePassword(password)\n            .then(() => {\n              //dispatch(AuthActionTypes.UPDATE_PASSWORD)\n              dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: successMessage});\n              dispatch(navigateTo(ROUTES.ACCOUNT));\n            })\n            .catch((error: any) => {\n              console.log(error);\n              dispatch({type: NavActionTypes.SET_BANNER_TEXT, payload: error.message});      \n            })\n    }\n    else{\n        console.log('user is not set');\n    }\n}\n\nexport const sendPasswordResetEmail = (email: string) => async (dispatch: any) => {\n  let actionCodeSettings = { url: `${resetPasswordUrl}`};\n  let successMessage = 'Sent! Check your email for a link to reset your password.';\n    try {\n      let result = await authRef\n                        .sendPasswordResetEmail(email, actionCodeSettings);\n                        dispatch(navigateTo(ROUTES.LOGIN));\n                        dispatch(setBannerText(successMessage));\n      console.log(result);\n    } catch (error) {\n      console.log(error.message);\n      dispatch(setBannerText(error.message));\n    }\n}\n \nexport const confirmPasswordReset = (code: string, newPassword: string) => async (dispatch: any) => {\n    try {\n      let result = await authRef\n                          .confirmPasswordReset(code, newPassword);\n      console.log(result);\n    } catch (error) {\n      console.log(error.message);\n    }\n}\n\nexport const deleteUser = () => async (dispatch: any) => {\n  try {\n    let aFirebaseUser = authRef.currentUser || null\n    if(aFirebaseUser){\n        aFirebaseUser\n            .delete()\n    }\n    else{\n        console.log('user is not set')\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}","export enum AuthActionTypes {\n    CREATE_ACCOUNT = \"CREATE_ACCOUNT\",\n    DEACTIVATE_ACCOUNT = \"DEACTIVATE_ACCOUNT\",\n    DELETE_ACCOUNT = \"DELETE_ACCOUNT\",\n    FETCH_USER = \"FETCH_USER\",\n    RESET_PASSWORD = \"RESET_PASSWORD\",\n    REQUEST_PASSWORD_RESET = \"REQUEST_PASSWORD_RESET\",\n    SIGN_IN = \"SIGN_IN\",\n    SIGN_OUT = \"SIGN_OUT\",\n    UPDATE_EMAIL = \"UPDATE_EMAIL\",\n    UPDATE_PASSWORD = \"UPDATE_PASSWORD\",\n}\n\nexport enum NavActionTypes {\n    CLEAR_BANNER_TEXT = \"CLEAR_BANNER_TEXT\",\n    SET_BANNER_TEXT = \"SET_BANNER_TEXT\"\n}"],"sourceRoot":""}